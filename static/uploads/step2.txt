from flask import Flask, redirect, url_for, session
from flask_dance.contrib.google import make_google_blueprint, google
from dotenv import load_dotenv
import os

# Load .env variables
load_dotenv()

app = Flask(__name__)
app.secret_key = os.getenv("FLASK_SECRET_KEY", "default_secret_key")

# Allow HTTP for development
os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'

# Whitelisted admin email
ADMIN_EMAIL = os.getenv("ADMIN_EMAIL", "your-admin@gmail.com")

# Google OAuth setup
google_bp = make_google_blueprint(
    client_id=os.getenv("GOOGLE_OAUTH_CLIENT_ID"),
    client_secret=os.getenv("GOOGLE_OAUTH_CLIENT_SECRET"),
    scope=[
        "openid",
        "https://www.googleapis.com/auth/userinfo.email",
        "https://www.googleapis.com/auth/userinfo.profile"
    ],
    redirect_to="welcome"
)

app.register_blueprint(google_bp, url_prefix="/login")


@app.route("/")
def index():
    return '<a href="/force-login">Login with Google (Choose Account)</a>'


@app.route("/force-login")
def force_login():
    # Forces Google to ask for account every time
    return redirect(url_for("google.login") + "?prompt=select_account")


@app.route("/welcome")
def welcome():
    if not google.authorized:
        return redirect(url_for("google.login"))

    # Get user info
    resp = google.get("/oauth2/v2/userinfo")
    if not resp.ok:
        return f"Failed to fetch user info: {resp.text}"

    user_info = resp.json()
    session["user"] = {
        "name": user_info["name"],
        "email": user_info["email"],
        "role": "admin" if user_info["email"] == ADMIN_EMAIL else "user"
    }

    return f"""
        <h1>Welcome, {user_info['name']}</h1>
        <p>Email: {user_info['email']}</p>
        <p>Role: {'Admin' if user_info['email'] == ADMIN_EMAIL else 'User'}</p>
        <a href='/admin'>Go to Admin Panel</a>
    """


@app.route("/admin")
def admin():
    user = session.get("user")
    if not user:
        return redirect(url_for("google.login"))

    if user["email"] != ADMIN_EMAIL:
        return "Access denied. You are not an admin."

    return f"<h1>Admin Panel</h1><p>Welcome, {user['name']}!</p>"


if __name__ == "__main__":
    app.run(debug=True)
